AWSTemplateFormatVersion: '2010-09-09'
Description: Distribution Starter-kit for AWS VPC & Network - Free Tier
Metadata:
  License: Apache-2.0
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: 'Network Configuration'
        Parameters:
          - VPCCIDR
      - Label:
          default: 'Starter-kit Specific Details'
        Parameters:
          - AWSDistributorName
          - ReportingEnabled

Parameters:
  VPCCIDR:
    Description: Enter the CIDR value of your network in AWS
    Type: String
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 173.0.0.0/16
  ####################################################################################
  AWSDistributorName:
    Description: Partner Name
    Type: String
    Default: AcmeCorp
  #Disclaimer: Please note that the following data are collected solely for quality assurance purposes - account id, region, distributor name, Starter-kit name. Your privacy is important to us, and we do not share your data with third parties.
  ReportingEnabled:
    Description: Allow AWS to collect basic usage metrics about this deployment
    Type: String
    AllowedValues:
      - yes
      - no
    Default: yes

Conditions:
  isReportingEnabled: !Equals [!Ref ReportingEnabled, yes]

Resources:
  #VPC Creation
  myVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: stack
          Value: Network-Starter-kit
        - Key: Name
          Value: !Join ['-', [VPC-Standard, !Ref AWS::StackName]]
  #Creation of public Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Select [1, !Cidr [!GetAtt myVPC.CidrBlock, 10, 8]]
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Join ['-', [PublicSubnet1, !Ref AWS::StackName]]
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Select [2, !Cidr [!GetAtt myVPC.CidrBlock, 10, 8]]
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Join ['-', [PublicSubnet2, !Ref AWS::StackName]]
  #Creation of Private Subnets
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Select [5, !Cidr [!GetAtt myVPC.CidrBlock, 10, 8]]
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Join ['-', [PrivateSubnet1, !Ref AWS::StackName]]
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: myVPC
      CidrBlock: !Select [6, !Cidr [!GetAtt myVPC.CidrBlock, 10, 8]]
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ''
      Tags:
        - Key: Name
          Value: !Join ['-', [PrivateSubnet2, !Ref AWS::StackName]]
  StandardIG:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref AWS::StackName, Standard-IG]]
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: myVPC
      InternetGatewayId:
        Ref: StandardIG
  #Routing
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
        - Key: Name
          Value: PublicRT
  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myVPC
      Tags:
        - Key: Name
          Value: PrivateRT
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: StandardIG
    Properties:
      RouteTableId:
        Ref: PublicRT
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: StandardIG
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRT
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRT
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRT
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRT
  #webserver Security group
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref myVPC
      GroupName: Web Server Security Group
      GroupDescription: Allow access from HTTP, HTTPS from Anywhere and RDP from Bation Host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: 0.0.0.0/0
  #database security group
  DbServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref myVPC
      GroupName: DB Server Security Group
      GroupDescription: Allow access from Web Server only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 1433
          ToPort: 1433
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          SourceSecurityGroupId: !Ref WebServerSecurityGroup
  sendStatisticsStack:
    Type: AWS::CloudFormation::Stack
    Condition: isReportingEnabled
    Properties:
      TemplateURL: !Sub 'https://s3.ap-south-1.amazonaws.com/aws-distribution-bundle-templates/cft_statsProcessor_prod.yaml'
      Parameters:
        AWSDistributorName: !Ref AWSDistributorName
        BundleName: INF0012
      TimeoutInMinutes: 5
